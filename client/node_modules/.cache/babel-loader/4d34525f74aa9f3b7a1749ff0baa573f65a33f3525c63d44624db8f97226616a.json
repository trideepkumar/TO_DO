{"ast":null,"code":"var _jsxFileName = \"/Users/trideep/TODO_NEW/client/src/components/AddTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axiosInstance from './api/axiosInstance';\nimport { setAuth } from './app/features/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTasks({\n  AddTask\n}) {\n  _s();\n  const [value, setValue] = useState('');\n  const authState = useSelector(state => state.auth.authState);\n  const dispatch = useDispatch();\n  const addItem = async () => {\n    if (!value.trim()) {\n      return; // Don't add empty tasks\n    }\n\n    AddTask(value);\n    setValue('');\n    try {\n      const body = {\n        tasks: [value],\n        id: authState._id\n      };\n      const response = await axiosInstance.post('/addTask', body);\n      console.log(response.data);\n      if (response.status === 200) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        dispatch(setAuth(response.data));\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      placeholder: \"Add New Task\",\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      className: \"add-btn\",\n      children: \"ADD TASK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTasks, \"2fKeIhO5XovWDhJ81LyPtCrTuvg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = AddTasks;\nexport default AddTasks;\nvar _c;\n$RefreshReg$(_c, \"AddTasks\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","axiosInstance","setAuth","jsxDEV","_jsxDEV","AddTasks","AddTask","_s","value","setValue","authState","state","auth","dispatch","addItem","trim","body","tasks","id","_id","response","post","console","log","data","status","localStorage","setItem","JSON","stringify","error","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/trideep/TODO_NEW/client/src/components/AddTasks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axiosInstance from './api/axiosInstance';\nimport { setAuth } from './app/features/authSlice';\n\nfunction AddTasks({ AddTask }) {\n  const [value, setValue] = useState('');\n  const authState = useSelector((state) => state.auth.authState);\n\n  const dispatch = useDispatch();\n\n  const addItem = async () => {\n    if (!value.trim()) {\n      return; // Don't add empty tasks\n    }\n\n    AddTask(value);\n    setValue('');\n\n    try {\n      const body = { tasks:[value], id: authState._id };\n      const response = await axiosInstance.post('/addTask', body);\n      console.log(response.data);\n      if (response.status === 200) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        dispatch(setAuth(response.data))\n      }\n      \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className='input-container'>\n      <input\n        type='text'\n        className='input'\n        placeholder='Add New Task'\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <button onClick={addItem} className='add-btn'>\n        ADD TASK\n      </button>\n    </div>\n  );\n}\n\nexport default AddTasks;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,SAASC,OAAO,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,SAAS,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,SAAS,CAAC;EAE9D,MAAMG,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;MACjB,OAAO,CAAC;IACV;;IAEAT,OAAO,CAACE,KAAK,CAAC;IACdC,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMO,IAAI,GAAG;QAAEC,KAAK,EAAC,CAACT,KAAK,CAAC;QAAEU,EAAE,EAAER,SAAS,CAACS;MAAI,CAAC;MACjD,MAAMC,QAAQ,GAAG,MAAMnB,aAAa,CAACoB,IAAI,CAAC,UAAU,EAAEL,IAAI,CAAC;MAC3DM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1B,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ,CAACI,IAAI,CAAC,CAAC;QAC3DX,QAAQ,CAACX,OAAO,CAACkB,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC;IAEF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,OAAO;MACjBG,WAAW,EAAC,cAAc;MAC1B1B,KAAK,EAAEA,KAAM;MACb2B,QAAQ,EAAGC,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAAC7B,KAAK;IAAE;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrC,OAAA;MAAQsC,OAAO,EAAE5B,OAAQ;MAACiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAE9C;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAClC,EAAA,CA1CQF,QAAQ;EAAA,QAEGL,WAAW,EAEZD,WAAW;AAAA;AAAA4C,EAAA,GAJrBtC,QAAQ;AA4CjB,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}