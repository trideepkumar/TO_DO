{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  authState: JSON.parse(localStorage.getItem('user')) ? JSON.parse(localStorage.getItem('user')) : null\n};\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setAuth: state => {\n      state.authState = JSON.parse(localStorage.getItem('user'));\n    },\n    clearAuth: state => {\n      state.authState = null;\n    }\n  }\n});\nexport default authSlice.reducer;\nexport const {\n  setAuth,\n  clearAuth\n} = authSlice.actions;","map":{"version":3,"names":["createSlice","initialState","authState","JSON","parse","localStorage","getItem","authSlice","name","reducers","setAuth","state","clearAuth","reducer","actions"],"sources":["/Users/trideep/TODO_NEW/client/src/components/app/features/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n \nconst initialState = {\n    authState: JSON.parse(localStorage.getItem('user')) ? JSON.parse(localStorage.getItem('user')) : null\n}\n\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n     setAuth : (state) => {\n         state.authState = JSON.parse(localStorage.getItem('user'))\n     } ,\n     clearAuth: (state) => {\n        state.authState = null\n     }\n   }\n})\n\nexport default authSlice.reducer\nexport const { setAuth , clearAuth } = authSlice.actions"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG;AACrG,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACPC,OAAO,EAAIC,KAAK,IAAK;MACjBA,KAAK,CAACT,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC;IACDM,SAAS,EAAGD,KAAK,IAAK;MACnBA,KAAK,CAACT,SAAS,GAAG,IAAI;IACzB;EACF;AACH,CAAC,CAAC;AAEF,eAAeK,SAAS,CAACM,OAAO;AAChC,OAAO,MAAM;EAAEH,OAAO;EAAGE;AAAU,CAAC,GAAGL,SAAS,CAACO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}